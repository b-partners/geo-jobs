/*
 * Image Annotation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package app.bpartners.gen.annotator.endpoint.rest.model;

import app.bpartners.gen.annotator.endpoint.rest.OpenapiGenerated;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.io.Serializable;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

/** CreateAnnotatedTask */
@JsonPropertyOrder({
  CreateAnnotatedTask.JSON_PROPERTY_ID,
  CreateAnnotatedTask.JSON_PROPERTY_ANNOTATOR_ID,
  CreateAnnotatedTask.JSON_PROPERTY_FILENAME,
  CreateAnnotatedTask.JSON_PROPERTY_ANNOTATION_BATCH
})
@OpenapiGenerated
@SuppressWarnings("all")
public class CreateAnnotatedTask implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_ANNOTATOR_ID = "annotatorId";
  private String annotatorId;

  public static final String JSON_PROPERTY_FILENAME = "filename";
  private String filename;

  public static final String JSON_PROPERTY_ANNOTATION_BATCH = "annotationBatch";
  private CreateAnnotationBatch annotationBatch;

  public CreateAnnotatedTask() {}

  public CreateAnnotatedTask id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }

  public CreateAnnotatedTask annotatorId(String annotatorId) {
    this.annotatorId = annotatorId;
    return this;
  }

  /**
   * Get annotatorId
   *
   * @return annotatorId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNOTATOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAnnotatorId() {
    return annotatorId;
  }

  @JsonProperty(JSON_PROPERTY_ANNOTATOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnotatorId(String annotatorId) {
    this.annotatorId = annotatorId;
  }

  public CreateAnnotatedTask filename(String filename) {
    this.filename = filename;
    return this;
  }

  /**
   * Get filename
   *
   * @return filename
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getFilename() {
    return filename;
  }

  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilename(String filename) {
    this.filename = filename;
  }

  public CreateAnnotatedTask annotationBatch(CreateAnnotationBatch annotationBatch) {
    this.annotationBatch = annotationBatch;
    return this;
  }

  /**
   * Get annotationBatch
   *
   * @return annotationBatch
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANNOTATION_BATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public CreateAnnotationBatch getAnnotationBatch() {
    return annotationBatch;
  }

  @JsonProperty(JSON_PROPERTY_ANNOTATION_BATCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnotationBatch(CreateAnnotationBatch annotationBatch) {
    this.annotationBatch = annotationBatch;
  }

  /** Return true if this CreateAnnotatedTask object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAnnotatedTask createAnnotatedTask = (CreateAnnotatedTask) o;
    return Objects.equals(this.id, createAnnotatedTask.id)
        && Objects.equals(this.annotatorId, createAnnotatedTask.annotatorId)
        && Objects.equals(this.filename, createAnnotatedTask.filename)
        && Objects.equals(this.annotationBatch, createAnnotatedTask.annotationBatch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, annotatorId, filename, annotationBatch);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAnnotatedTask {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    annotatorId: ").append(toIndentedString(annotatorId)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    annotationBatch: ").append(toIndentedString(annotationBatch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(
          String.format(
              "%sid%s=%s",
              prefix,
              suffix,
              URLEncoder.encode(String.valueOf(getId()), StandardCharsets.UTF_8)
                  .replaceAll("\\+", "%20")));
    }

    // add `annotatorId` to the URL query string
    if (getAnnotatorId() != null) {
      joiner.add(
          String.format(
              "%sannotatorId%s=%s",
              prefix,
              suffix,
              URLEncoder.encode(String.valueOf(getAnnotatorId()), StandardCharsets.UTF_8)
                  .replaceAll("\\+", "%20")));
    }

    // add `filename` to the URL query string
    if (getFilename() != null) {
      joiner.add(
          String.format(
              "%sfilename%s=%s",
              prefix,
              suffix,
              URLEncoder.encode(String.valueOf(getFilename()), StandardCharsets.UTF_8)
                  .replaceAll("\\+", "%20")));
    }

    // add `annotationBatch` to the URL query string
    if (getAnnotationBatch() != null) {
      joiner.add(getAnnotationBatch().toUrlQueryString(prefix + "annotationBatch" + suffix));
    }

    return joiner.toString();
  }
}
